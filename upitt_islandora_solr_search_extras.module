<?php

/**
 * @file
 * Primary hook implementations.
 */

// Permissions.
define('UPITT_ISLANDORA_SOLR_SEARCH_EXTRAS_MANAGE', 'manage upitt solr search');

/**
 * Implements hook_menu().
 */
function upitt_islandora_solr_search_extras_menu() {
  $items = array(
    'islandora/object/%islandora_object/searching_collection' => array(
      'title' => 'Search within Collection',
      'description' => 'Search the models within this Collection.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_islandora_solr_search_extras_search_specific', 2),
      'type' => MENU_CALLBACK,
      'access callback' => 'islandora_object_access_callback',
      'access arguments' => array(ISLANDORA_VIEW_OBJECTS, 2),
    ),
    'admin/islandora/tools/upitt_islandora_solr_search_extras' => array(
      'title' => 'SOLR Search Extras Settings',
      'description' => 'Configure the various SOLR Search Extras options.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_islandora_solr_search_extras_admin_settings'),
      'access arguments' => array(UPITT_ISLANDORA_SOLR_SEARCH_EXTRAS_MANAGE),
      'file' => 'includes/admin.form.inc',
    ),
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function upitt_islandora_solr_search_extras_theme() {
  return array(
    // to remove duplicate pager and display_links
    'islandora_objects_subset' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora-objects-subset',
      'variables' => array(
        'objects' => NULL,
        'display' => 'grid',
        'limit' => 10,
        'total' => NULL,
        'pager_element' => 0,
      ),
    ),
    // to replace output of grid with solr_search
    'islandora_objects_grid' => array(
      'template' => 'theme/islandora-objects-grid',
      'file' => 'theme/theme.inc',
      'variables' => array('islandora_object' => NULL, 'objects' => NULL),
    ),
    // to replace output with solr_search
    'islandora_objects_list' => array(
      'template' => 'theme/islandora-objects-list',
      'file' => 'theme/theme.inc',
      'variables' => array('islandora_object' => NULL, 'objects' => NULL),
    ),
    'islandora_objects' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora-objects',
      'variables' => array(
        'objects' => NULL,
        'display' => NULL,
        'page_size' => 20,
        'limit' => 12,
      ),
    ),
    // to display the solr search results for islandora/search and collection/[fedora-label]
    'islandora_solr_extras' => array(
      'template' => 'theme/islandora-solr-extras',
      'variables' => array(
        'results' => NULL,
        'elements' => array(),
        'pids' => array(),
      ),
    ),
  );
}

function upitt_islandora_solr_search_extras_search_specific($form, &$form_state, AbstractObject $object) {
  // The searchterms is a POST value
  $search_term = isset($_POST['searchterm']) ? $_POST['searchterm'] : '';
  $search_field = isset($_POST['field']) ? $_POST['field'] : '';
  if ($search_term) {
    if ($search_field) {
      $solr_query = format_string('(!field:!value OR !field2:!value OR !field3:!value) AND (!search_field:*!search_term*)',
        array('!field' => 'RELS_EXT_isMemberOfCollection_uri_ms',
              '!field2' => 'RELS_EXT_isPageOf_uri_ms',
              '!field3' => 'RELS_EXT_isMemberOf_uri_ms',
              '!value' => Apache_Solr_Service::escape('info:fedora/' . $object),
              '!search_field' => $search_field,
              '!search_term' => $search_term
          )
        );
    }
    else {
      // need to get the solr system's setting for this!
      $solr_query = format_string('(!field:!value OR !field2:!value OR !field3:!value) AND (catch_all_fields_mt:*!search_term* OR dc.title:*!search_term* OR dc.subject:*!search_term* OR mods_abstract_mt:*!search_term* OR mods_originInfo_dateOther_ms:*!search_term*)',
        array('!field' => 'RELS_EXT_isMemberOfCollection_uri_ms',
              '!field2' => 'RELS_EXT_isPageOf_uri_ms',
              '!field3' => 'RELS_EXT_isMemberOf_uri_ms',
              '!value' => Apache_Solr_Service::escape('info:fedora/' . $object),
              '!search_term' => $search_term
          )
        );
    }
  }
  else {
    $solr_query = format_string('!field:*!value*', array(
                '!field' => 'RELS_EXT_isMemberOfCollection_uri_ms',
                '!value' => Apache_Solr_Service::escape('info:fedora/' . $object),
        ));
  }
  $options = array('query' => array('type' => 'dismax',
      'f' => array($solr_query)));
  drupal_goto('islandora/search', $options);
}

/**
 * This responds to the module_invoke_all().
 *
 * The call from within the islandora_solr module's
 * "islandora_solr_printResults" function will be handled here.
 * The functionality here is to display as normal for all objects that
 * already have MODS info, but to load the MODS from parent objects for
 * objects that have a value in RELS_EXT_isMemberOfCollection_uri_ms.
 *
 * @param array $solr_results
 *   Array containing the Solr results which are altered trough the query
 *   processor.
 *
 * @return markup
 *   Returns the themed solr search results.
 */
function upitt_islandora_solr_search_extras_islandora_solr_printResults($solr_results) {
  $solr_fields = _get_solr_search_fields();
  $path = drupal_get_path('module', 'upitt_islandora_solr_search_extras');
  drupal_add_css("$path/css/solr_search_extras.css");
  $tmp_title = '';
  if (variable_get('upitt_islandora_solr_search_extras_showparent_searchresults')) {
    $solr_results = islandora_solr_prepare_solr_results($solr_results);
    $object_results = $solr_results['response']['objects'];
    $object_results = islandora_solr_prepare_solr_doc($object_results);

    $elements = array();
    $elements['solr_total'] = $solr_results['response']['numFound'];
    $elements['solr_start'] = $solr_results['response']['start'];
    foreach ($object_results as $k=>$solr_result_object) {
      if (isset($object_results[$k]['datastreams'])) {
        $object_results[$k]['page_solr_doc'] = array();
        $object_results[$k]['thumbnail'] = $object_results[$k]['page_thumbnail'] = '';

        $path = url($object_results[$k]['thumbnail_url'], array('query' => $object_results[$k]['thumbnail_url_params']));
        if ($path <> '/') {
          $image = theme('image', array('path' => $path));

          $options = array('html' => TRUE);
          if (isset($object_results[$k]['object_label'])) {
            $options['attributes']['title'] = $object_results[$k]['object_label'];
          }
          if (isset($object_results[$k]['object_url_params'])) {
            $options['query'] = $object_results[$k]['object_url_params'];
          }
          if (isset($object_results[$k]['object_url_fragment'])) {
            $options['fragment'] = $object_results[$k]['object_url_fragment'];
          }
          // The link may be preferred to take the user to the page result.
          $fragment = (isset($object_results[$k]['object_url_fragment']) && $object_results[$k]['object_url_fragment'] <> '') ? '#' . $object_results[$k]['object_url_fragment'] : '';
          $object_results[$k]['thumbnail'] = l($image, $object_results[$k]['object_url'], $options);
        }
        else {
          $object_results[$k]['thumbnail'] = $object_results[$k]['page_thumbnail'];
          $object_results[$k]['page_thumbnail'] = '';
        }

        if (array_search('MODS', $object_results[$k]['datastreams']) === FALSE) {
          if (((!(isset($object_results[$k]['solr_doc']['RELS_EXT_isMemberOfCollection_uri_ms']))) ||
               (!(isset($object_results[$k]['solr_doc']['RELS_EXT_isPageOf_uri_ms']))) ||
               (!(isset($object_results[$k]['solr_doc']['RELS_EXT_isMemberOf_uri_ms'])))) &&
              (isset($object_results[$k]['object_url']))) {
            $solr_doc = _islandora_solr_pid_parent_search($object_results[$k], $solr_fields, $options);
            if (is_array($solr_doc)) {
              // Keep the existing title value for later.
              if (isset($object_results[$k]['dc.title'])) {
                $tmp_title = $object_results[$k]['dc.title']['value'];
              }
              $page = $object_results[$k];
              $object_results[$k]['solr_doc'] = $solr_doc;
              $object_results[$k]['page_solr_doc'] = $page['solr_doc'];
   // Perhaps the child object thumbnail will be needed to display in the islandora-solr-extras.tpl.php.
   /*
              if (isset($page['datastreams']) && array_search('TN', $page['datastreams'])) {
                $options = array('html' => TRUE);
                if (isset($page['object_label'])) {
                  $options['attributes']['title'] = $page['object_label'];
                }
                if (isset($page['object_url_params'])) {
                  $options['query'] = $page['object_url_params'];
                }
                if (isset($page['object_url_fragment'])) {
                  $options['fragment'] = $page['object_url_fragment'];
                }
                $page_image = theme('image', array(
                  'path' => url("islandora/object/{$page['PID']}/datastream/TN/view"),
                  'attributes' => array(),
                  'width' => '60px',
                ));
                $object_results[$k]['page_thumbnail'] = l($page_image, $page['object_url'], $options);
              }
    */
              if ($tmp_title) {
                $object_results[$k]['solr_doc']['dc.title']['value'] = $tmp_title .
                ' in ' . l($solr_doc['solr_doc']['dc.title']['value'], $solr_doc['object_url']);
              }
            }
          }
        }
      }
      if (($object_results[$k]['solr_doc']['dc.title']['value']) == '') {
        $object_results[$k]['solr_doc']['dc.title']['value'] = $page['object_label'];
      }
      if ((stristr($object_results[$k]['content_models'][0], 'pageCModel') == 'pageCModel') &&
        (substr($object_results[$k]['object_label'], 0, 5) == 'Page ')) {
        // Get the page # value from the object_label - and create a new item that will be
        // rendered as the page number.
        @list($keep, $junk) = explode(", ", $object_results[$k]['object_label']);
        $page_number = str_replace("Page ", "", $keep);
        if (is_numeric($page_number)) {
          $object_results[$k]['solr_doc']['page_number'] = array('value' => 'Page: ' . $page_number, 'label' => 'Page #', 'class' => '' );
        }
      }
    }
    // Return themed search results.
    return theme('islandora_solr_extras', array('results' => $object_results, 'elements' => $elements));
  }
}

/**
 * Helper function to lookup the parent object based on a PID value.
 */
function _islandora_solr_pid_parent_search($child_object, $solr_fields, $options) {
  $child_pid = $child_object['PID'];
  $solr_fields_csv = implode(",", array_keys($solr_fields));
  $_islandora_solr_queryclass = new IslandoraSolrQueryProcessor();
  $islandora_object = islandora_object_load($child_pid);
  $parent = $islandora_object->getParents();
  $page_parents = $islandora_object->relationships->get(NULL, 'isPageOf');
  $page_parent_ids = array();
  foreach ($page_parents as $page_parent) {
    $page_parent_ids[] = $page_parent['object']['value'];
  }
  $parent = array_merge($parent, $page_parent_ids);
  // Get the first value if there happens to be more than one Parent.
  $pid = str_replace(array("islandora/object/", "/", ":"), array("", "\/", "\:"), array_pop($parent));
  if ($pid) {
    // Build and execute Apache Solr query.
    module_load_include('inc', 'islandora_solr', 'includes/utilities');
    $query_processor = new IslandoraSolrQueryProcessor();
    $query_processor->solrQuery = 'PID:'.$pid;
    $query_processor->solrStart = 0;
    $query_processor->solrLimit = 1;
    $query_processor->solrParams = array(
      'fl' => $solr_fields_csv,
      'fq' => variable_get('islandora_solr_base_filter', ''),
    );
    $url = parse_url(variable_get('islandora_solr_url', 'localhost:8080/solr'));
    $solr = new Apache_Solr_Service($url['host'], $url['port'], $url['path'] . '/');
    $solr->setCreateDocuments(FALSE);
    try {
      $results = $solr->search($query_processor->solrQuery, $query_processor->solrStart, $query_processor->solrLimit, $query_processor->solrParams, 'GET');
      $tmp = json_decode($results->getRawResponse(), TRUE);
      $added_fields = $results = array();
      foreach ($solr_fields as $key => $solr_field) {
        $found = false;
        foreach ($tmp['response']['docs'] as $match_result) {
          if (array_key_exists($key, $match_result)) {
            $found = (is_array($match_result[$key])) ? $match_result[$key][0] : $match_result[$key];
          }
        }
        if ($found) {
          $added_fields[] = $key;
          $results[$key] = array('label' => $solr_fields[$key]['label'],
                                 'class' => $solr_fields[$key]['class'],
                                 'value' => $found);
        }
      }
      foreach ($tmp['response']['docs'] as $trip) {
        $keys = array_keys($trip);
        foreach ($keys as $key) {
          if (!array_search($key, $added_fields)) {
            $results[$key] = array('label' => $solr_fields[$key]['label'],
                                   'class' => $solr_fields[$key]['class'],
                                   'value' => @$trip[$key][0]);
          }
        }
      }
      if (isset($results['dc.title']['value'])) {
        $results['dc.title']['value'] = l($results['dc.title']['value'], $child_object['object_url'], $options);
      }
      return $results;
    }
    catch (Exception $e) {
      return array();
    }
  }
}

/**
 * Implements hook_permission().
 */
function upitt_islandora_solr_search_extras_permission() {
  return array(
    UPITT_ISLANDORA_SOLR_SEARCH_EXTRAS_MANAGE => array(
      'title' => t('Manage solr extras'),
      'description' => t('Manage solr extras.'),
    ),
  );
}

function _get_solr_search_fields() {
  $results = db_query("SELECT `solr_field`, `solr_field_settings` FROM islandora_solr_fields WHERE field_type = 'result_fields' ORDER BY `weight`");
  $fields = array();
  foreach ($results as $row) {
    $settings = unserialize($row->solr_field_settings);
    $fields[$row->solr_field] = array('label' => $settings['label'],
                                      'class' => $row->solr_field);
  }

  return $fields;
}

function upitt_islandora_solr_search_extras_form_alter(&$form, $form_state, $form_id) {
  if($form_id == 'search_in_collection' && isset($form['islandora_object_id']) && $form['islandora_object_id']['#value'] <> '') {
    $form['#action'] = '/islandora/object/' . $form['islandora_object_id']['#value'] . '/searching_collection' ;
  }
}

function search_in_collection(array $form, array &$form_state, $id, $objLabel) {
  $path = drupal_get_path('module', 'upitt_islandora_solr_search_extras');
  drupal_add_css("$path/css/solr_search_extras.css");
  $form = array(
    'options' => array(
      '#type' => 'fieldset',
      '#title' => t('Search within "' . $objLabel . '"'),
      '#attributes' => array('class' => array('container-inline')),
      'searchterm' => array(
        '#type' => 'textfield',
        '#value' => '',
        '#defaultvalue' => '',
        '#size' => 40,
      ),
      'field' => array(
        '#title' => t('Field'),
        '#type' => 'select',
        '#default_value' => isset($form_state['values']['field']) ? $form_state['values']['field'] : 'dc.title',
        '#options' => islandora_solr_get_fields('search_fields'),
      ),
    ),
    'islandora_object_id' => array(
      '#type' => 'hidden',
      '#value' => $id,
    ),
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Search within Collection'),
    ),
  );
  return $form;
}

